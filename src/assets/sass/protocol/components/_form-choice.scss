// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

@import '../includes/lib';

.mzp-c-choice {
    box-sizing: border-box;
    clear: left;
    margin-bottom: $field-spacing;
    min-height: $check-height;
    overflow: hidden;
    position: relative;

    // hide real input
    input[type="checkbox"],
    input[type="radio"] {
        @include bidi(((left, 0, right, auto),));
        box-sizing: border-box;
        height: $check-height;
        opacity: 0;
        position: absolute;
        top: 0;
        width: $check-height;
        z-index: 1;
    }

    // label
    label {
        @include bidi(((padding-left, #{$check-height + $spacing-md}, padding-right, 0),));
        margin-bottom: 0;
        padding-top: 4px;
        vertical-align: top;
    }

    &.mzp-is-legal label {
        color: $color-gray-80; //TODO: keep darker text?
        font-weight: normal;
    }

    // create fake input
    label:before {
        display: block;
        left: $check-sprite-grid * 7 * -1; //todo bidi
        position: absolute;
        top: 0;
    }

    input[type="checkbox"] + label:before {
        content: url('/static/img/forms/check_sprite.svg');
    }

    input[type="radio"] + label:before {
        content: url('/static/img/forms/radio_sprite.svg');
    }

    input:hover + label:before {
        left: $check-sprite-grid * 6 * -1; //todo bidi
        top: $check-sprite-grid * 1 * -1; //todo bidi
    }

    input:focus + label:before {
        left: $check-sprite-grid * 5 * -1; //todo bidi
        top: $check-sprite-grid * 2 * -1; //todo bidi
    }

    input:checked + label:before {
        left: $check-sprite-grid * 4 * -1; //todo bidi
        top: $check-sprite-grid * 3 * -1; //todo bidi
    }

    input:checked:hover + label:before {
        left: $check-sprite-grid * 3 * -1; //todo bidi
        top: $check-sprite-grid * 4 * -1; //todo bidi
    }

    input:checked:focus + label:before {
        left: $check-sprite-grid * 2 * -1; //todo bidi
        top: $check-sprite-grid * 5 * -1; //todo bidi
    }
}

// multiple together, inline or not

// the spacing on these involves maths because the margins don't collapse on fieldsets
// normally I'd just remove the bottom margin on the :last-child
// but with inline elements we can't know how many are on the last line to remove the bottom margin
// the maths is done with padding instead of margin so there's consistant behaviour no matter what element the class is applied to
// this involves a fair amount of removing margins too
.mzp-c-group-choices {
    margin-bottom: 0;
    padding-bottom: $field-spacing - $label-spacing;

    legend {
        @include form-label();
        float: left;
        padding-bottom: $label-spacing;
        margin: 0;
        width: 100%;
    }

    .mzp-c-choice {
        margin-bottom: 0;
        padding-bottom: $label-spacing;

        label {
            color: $color-gray-80; //TODO: keep darker text?
            font-weight: normal;
            margin-bottom: 0;
        }
    }

    .mzp-c-field-info {
        padding-top: $spacing-md - $label-spacing;
        padding-bottom: $label-spacing;
    }

    &.mzp-l-group-inline .mzp-c-choice {
        display: inline-block;
        margin-right: $field-spacing;
        vertical-align: top;
    }
}
